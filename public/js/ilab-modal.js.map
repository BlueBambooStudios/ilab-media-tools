{"version":3,"sources":["ilab-modal-tabs.js"],"names":[],"mappings":"YACA,AACA,0BACA,SACA,eACA,AACA,gCACA,aACA,MACA,AACA,QACA,WACA,kCACA,CACA,IACA,KACA,AACA,QACA,SACA,GACA,AACA,KACA,AACA,cACA,qCACA,+BACA,AACA,uBACA,uBACA,AACA,iBACA,AACA,AACA,oCACA,0BACA,QACA,eACA,wBACA,KACA,AACA,mBACA,SACA,MACA,kBACA,yBACA,iCACA,kCACA,kCACA,AACA,AACA,kDACA,MACA,QACA,AACA,uBACA,mBACA,AACA,qBACA,sCACA,GACA,AACA,+BACA,sBACA,MAWA,kBAVA,AACA,AACA,8BACA,AACA,gCACA,AACA,0BACA,kBACA,AACA,iBAEA,AACA,AACA,AACA,8BACA,eACA,+BACA,SACA,yBACA,kBACA,aACA,gBACA,8BACA,kBACA,cACA,AACA,AACA,oBACA,AACA,AACA,6BACA,AACA,+BACA,SACA,yBACA,yBACA,aACA,AACA,AACA,oBACA,aACA,OACA,SACA,SACA,AACA,AACA,WACA,SACA,SACA,AACA,OACA,AACA,eACA,YACA,GACA,EACA,AACA,IACA,AA1HA,AACA,AACA,AACA,QACA,wBACA,IACA,AACA,AACA,YAsCA,CACA,iBAtCA,2BACA,QACA,AACA,EAoCA,oBAnCA,CACA,IACA,AACA,EAiCA,kBAhCA,CACA,QACA,AACA,EA8BA,oBA7BA,CACA,IACA,AACA,EA2BA,AACA,uBA3BA,AACA,AACA,oBACA,AACA,AACA,AACA,yEACA,AACA,6BACA,AACA,GACA,AACA,AACA,AACA,AACA,oBACA,AACA,SACA,GACA,AACA,EAQA,IACA,kCACA,qDACA,GACA,yBACA,mBACA,AACA,yBAGA,0CAFA,AACA,QAEA","file":"ilab-modal.js","sourcesContent":["(function($){\n\n    $.fn.ilabTabs=function(options){\n        var settings= $.extend({},options);\n        var sizeCanvas=null;\n\n        return this.each(function(){\n            var container=$(this);\n            var windowContainer = container;\n\n            var parentContainer = container.parent();\n            while(true) {\n                if (parentContainer.hasClass('ilabm-container')) {\n                    windowContainer = parentContainer;\n                    break;\n                }\n\n                parentContainer = parentContainer.parent();\n                if (!parentContainer) {\n                    break;\n                }\n            }\n\n            var label=container.find('.ilabm-tabs-select-label');\n            var select=container.find('.ilabm-tabs-select');\n            var tabs=container.find('.ilabm-editor-tab');\n\n            var minWidth=0;\n            var tabFont=null,tabMarginLeft=0,tabMarginRight=0,tabPaddingLeft=0,tabPaddingRight=0;\n\n            var getTextWidth=function(text, font) {\n                // re-use canvas object for better performance\n\n                var canvas = sizeCanvas || (sizeCanvas = document.createElement(\"canvas\"));\n                var context = canvas.getContext(\"2d\");\n                context.font = font;\n                var metrics = context.measureText(text);\n                return metrics.width;\n            };\n\n            tabs.each(function(){\n                var tab=$(this);\n                if (tabFont===null) {\n                    tabFont = tab.css('font');\n                    tabMarginLeft=parseInt(tab.css('margin-left'));\n                    tabMarginRight=parseInt(tab.css('margin-right'));\n                    tabPaddingLeft=parseInt(tab.css('padding-left'));\n                    tabPaddingRight=parseInt(tab.css('padding-right'));\n                }\n\n                tabWidth=getTextWidth(tab.text(),tabFont)+tabMarginLeft+tabMarginRight+tabPaddingLeft+tabPaddingRight+15;\n                minWidth+=tabWidth;\n            });\n\n            if (label && settings.hasOwnProperty('label'))\n                label.text(settings.label);\n\n            tabs.removeClass('active-tab');\n            tabs.on('click',function(e){\n                e.preventDefault();\n\n                tabs.removeClass('active-tab');\n                var tab=$(this);\n                tab.addClass('active-tab');\n\n                if (select)\n                    select.val(tab.data('value'));\n\n                settings.currentValue=tab.data('value');\n\n                if (settings.hasOwnProperty('tabSelected'))\n                    settings.tabSelected(tab);\n\n                return false;\n            });\n\n            if (select)\n            {\n                select.on('change',function(){\n                    tabs.removeClass('active-tab');\n                    tabs.each(function(){\n                        var tab=$(this);\n                        if (tab.data('value')==select.val())\n                            tab.addClass('active-tab');\n                    });\n                    var option=select.find(\":selected\");\n                    if (settings.hasOwnProperty('tabSelected'))\n                        settings.tabSelected(option);\n                });\n            }\n\n            if (settings.hasOwnProperty('currentValue'))\n            {\n                if (select)\n                    select.val(settings.currentValue);\n\n                tabs.each(function(){\n                   var tab=$(this);\n                    if (tab.data('value')==settings.currentValue)\n                        tab.addClass('active-tab');\n                });\n            }\n\n            var checkOverflow=function(){\n                if (minWidth > (windowContainer.width() - 350)) {\n                    label.show();\n                    select.show();\n                    tabs.hide();\n                }\n                else {\n                    label.hide();\n                    select.hide();\n                    tabs.show();\n                }\n            };\n\n            $(window).on('resize',checkOverflow);\n            checkOverflow();\n        });\n    };\n\n}(jQuery));\n"],"sourceRoot":"js/"}