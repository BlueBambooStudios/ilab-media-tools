{"version":3,"sources":["ilab-media-upload.js"],"names":["ilabAttachmentInfo","$","uploader","attachmentInfo","self","this","info","attachmentTemplate","data","attachmentTitle","find","attachmentCaption","attachmentAlt","attachmentDescription","attachmentAlign","attachmentLinkURL","attachmentSize","attachmentLinkType","saveToken","doSave","action","id","nonce","nonces","update","post_id","window","parent","wp","media","model","settings","post","changes[title]","val","changes[caption]","changes[alt]","changes[description]","ajaxurl","response","console","log","save","clearTimeout","setTimeout","handleChange","e","on","v","css","display","prop","url","link","insert","attachment[id]","view","sendToEditor","attachment[post_content]","attachment[post_excerpt]","attachment[image_alt]","attachment[image-size]","attachment[align]","attachment[url]","html","hasOwnProperty","send_to_editor","attachmentContainer","empty","append","ilabMediaUploadItem","file","cell","uploadItemTemplate","background","status","progress","progressTrack","text","width","opacity","addClass","state","postId","loader","type","indexOf","size","background-image","URL","createObjectURL","deselect","removeClass","startUpload","filename","name","FormData","_","each","Object","keys","inputs","key","cacheControl","expires","mimeType","ajax","attr","method","contentType","processData","xhr","ajaxSettings","upload","onprogress","Math","floor","loaded","total","success","successResponse","importData","importResponse","thumb","image","Image","onload","src","uploadFinished","error","uploadTarget","insertMode","uploadSelected","win","open","focus","preventDefault","ilabMediaUploader","insertButton","uploadDirections","template","hiddenFileInput","waitingQueue","uploadingQueue","watchToken","currentSelection","watchQueue","length","currentQ","i","up","shift","push","idx","splice","addFile","allowedMimes","mimeTypeParts","split","subType","imgixEnabled","extrasEnabled","videoEnabled","docsEnabled","stopPropagation","files","originalEvent","dataTransfer","click","frame"],"mappings":"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","file":"ilab-media-upload.js","sourcesContent":["var ilabAttachmentInfo = function($, uploader, attachmentInfo) {\n    var self = this;\n\n    this.info = $(uploader.attachmentTemplate(attachmentInfo));\n    this.data = attachmentInfo;\n\n    this.attachmentTitle = this.info.find('input[name=\"attachment-title\"]');\n    this.attachmentCaption = this.info.find('textarea[name=\"attachment-caption\"]');\n    this.attachmentAlt = this.info.find('input[name=\"attachment-alt\"]');\n    this.attachmentDescription = this.info.find('textarea[name=\"attachment-description\"]');\n    this.attachmentAlign = this.info.find('select[name=\"attachment-align\"]');\n    this.attachmentLinkURL = this.info.find('input[name=\"attachment-link-url\"]');\n    this.attachmentSize = this.info.find('select[name=\"attachment-size\"]');\n    this.attachmentLinkType = this.info.find('select[name=\"attachment-link-type\"]');\n\n    this.saveToken = null;\n\n    var doSave = function() {\n        var data = {\n            \"action\": \"save-attachment\",\n            \"id\": self.data.id,\n            \"nonce\": self.data.nonces.update,\n            post_id: window.parent.wp.media.model.settings.post.id,\n            \"changes[title]\": self.attachmentTitle.val(),\n            \"changes[caption]\": self.attachmentCaption.val(),\n            \"changes[alt]\": self.attachmentAlt.val(),\n            \"changes[description]\": self.attachmentDescription.val()\n        };\n\n        $.post(ajaxurl, data, function(response){\n           console.log(response);\n        });\n    };\n\n    this.save = function() {\n        clearTimeout(self.saveToken);\n        self.saveToken=setTimeout(doSave, 1000);\n    };\n\n    var handleChange = function(e) {\n        self.save();\n    };\n\n    this.attachmentTitle.on('change', handleChange);\n    this.attachmentCaption.on('change', handleChange);\n    this.attachmentAlt.on('change', handleChange);\n    this.attachmentDescription.on('change', handleChange);\n\n    this.attachmentLinkType.on('change', function(){\n        var v = self.attachmentLinkType.val();\n        if (v == 'none') {\n            self.attachmentLinkURL.css({\"display\": \"display\"});\n            self.attachmentLinkURL.val('');\n        } else if (v == 'file') {\n            self.attachmentLinkURL.prop(\"readonly\", \"readonly\");\n            self.attachmentLinkURL.css({\"display\": \"\"});\n            self.attachmentLinkURL.val(self.data.url);\n        } else if (v == 'post') {\n            self.attachmentLinkURL.prop(\"readonly\", \"readonly\");\n            self.attachmentLinkURL.css({\"display\": \"\"});\n            self.attachmentLinkURL.val(self.data.link);\n        } else if (v == 'custom') {\n            self.attachmentLinkURL.prop(\"readonly\", null);\n            self.attachmentLinkURL.css({\"display\": \"\"});\n            self.attachmentLinkURL.val(\"\");\n        }\n    });\n\n    this.insert = function() {\n        var data = {\n            \"action\": \"send-attachment-to-editor\",\n            \"attachment[id]\": self.data.id,\n            \"nonce\": window.parent.wp.media.view.settings.nonce.sendToEditor,\n            post_id: window.parent.wp.media.model.settings.post.id,\n            \"attachment[post_content]\": self.attachmentDescription.val(),\n            \"attachment[post_excerpt]\": self.attachmentCaption.val(),\n            \"attachment[image_alt]\": self.attachmentAlt.val(),\n            \"attachment[image-size]\": self.attachmentSize.val(),\n            \"attachment[align]\": self.attachmentAlign.val(),\n            \"attachment[url]\": self.attachmentLinkURL.val(),\n            \"html\": \"\"\n        };\n\n        $.post(ajaxurl, data, function(response){\n            console.log(response);\n            if (response.hasOwnProperty('data')) {\n                window.parent.send_to_editor(response.data);\n            }\n        });\n    };\n\n    this.attachmentLinkURL.css({\"display\": \"none\"});\n\n    uploader.attachmentContainer.empty();\n    uploader.attachmentContainer.append(this.info);\n};\n\n\nvar ilabMediaUploadItem = function($, uploader, file) {\n    var self = this;\n\n    this.cell = $(uploader.uploadItemTemplate());\n    this.background = this.cell.find('.ilab-upload-item-background');\n    this.status = this.cell.find('.ilab-upload-status');\n    this.progress = this.cell.find('.ilab-upload-progress');\n    this.progressTrack = this.cell.find('.ilab-upload-progress-track');\n\n    this.status.text('Waiting ...');\n    this.progressTrack.css({width: '0%'});\n    this.cell.css({'opacity': 0});\n    this.cell.addClass('no-mouse');\n    \n    this.state = 'waiting';\n    this.postId = null;\n\n    this.loader = this.cell.find('.ilab-loader-container');\n\n    if ((file.type.indexOf('image/')==0) && (file.size < (15 * 1024 * 1024))) {\n        this.background.css({opacity: 0.33, 'background-image': 'url('+URL.createObjectURL(file)+')'});\n    } else {\n        if (file.type.indexOf('image/')==0) {\n            this.cell.addClass('ilab-upload-cell-image');\n        } else if (file.type.indexOf('video/')==0) {\n            this.cell.addClass('ilab-upload-cell-video');\n        } else {\n            if (file.type == 'application/x-photoshop') {\n                this.cell.addClass('ilab-upload-cell-image');\n            } else {\n                this.cell.addClass('ilab-upload-cell-doc');\n            }\n        }\n    }\n\n    this.deselect = function() {\n        this.cell.removeClass('ilab-upload-selected');\n    };\n\n    this.startUpload = function() {\n        var data = {\n            \"action\": \"ilab_upload_prepare\",\n            \"filename\": file.name\n        };\n\n        $.post(ajaxurl, data, function(response){\n            console.log(response);\n            if (response.status == 'ready') {\n                self.status.text('Uploading ...');\n\n                var data = new FormData();\n                _.each(Object.keys(response.inputs), function(key){\n                    if (key != 'key') {\n                        data.append(key, response.inputs[key]);\n                    }\n                });\n\n                if (response.cacheControl != null) {\n                    data.append('Cache-Control', response.cacheControl);\n                }\n\n                if (response.expires != null) {\n                    data.append('Expires', response.expires);\n                }\n\n                var mimeType = file.type;\n                if (mimeType == 'application/x-photoshop') {\n                    mimeType = 'image/psd';\n                }\n\n                data.append('Content-Type', mimeType);\n                data.append('acl','public-read');\n                data.append('key',response.key);\n                data.append('file',file);\n\n\n                $.ajax({\n                    url: response.attr.action,\n                    method: 'POST',\n                    contentType: false,\n                    processData: false,\n                    data:data,\n                    xhr: function() {\n                        var xhr = $.ajaxSettings.xhr();\n                        xhr.upload.onprogress = function (e) {\n                            self.progressTrack.css({'width': (Math.floor(e.loaded / e.total * 100) + '%')});\n                        };\n                        return xhr;\n                    },\n                    success: function(successResponse) {\n                        var importData = {\n                            \"action\": \"ilab_upload_import_s3_file\",\n                            \"key\": response.key\n                        };\n\n                        $.post(ajaxurl, importData, function(importResponse){\n                            console.log(importResponse);\n                            if (importResponse.status == 'success') {\n                                self.progress.css({'display': 'none'});\n                                self.status.css({'display': 'none'});\n                                self.background.css({'opacity':''});\n\n                                self.state = 'ready';\n                                self.postId = importResponse.data.id;\n                                if (importResponse.data.thumb) {\n\n                                    self.loader.css({\"opacity\": 1});\n                                    var image = new Image();\n                                    image.onload=function() {\n                                        console.log('image loaded');\n                                        self.background.css({'background-image': 'url('+importResponse.data.thumb+')'});\n                                        self.loader.css({\"opacity\": 0});\n                                    };\n\n                                    image.src = importResponse.data.thumb;\n                                }\n\n                                self.cell.removeClass('no-mouse');\n                            } else {\n                                self.progress.css({'display': 'none'});\n                                self.status.text(\"Error.\");\n                                self.cell.addClass('upload-error');\n\n                            }\n\n                            uploader.uploadFinished(self);\n                        });\n\n\n                    },\n                    error: function(response) {\n                        self.progress.css({'display': 'none'});\n                        self.status.text('Error uploading.');\n\n                        uploader.uploadFinished(self);\n                    }\n                })\n            } else {\n                uploader.uploadFinished(self);\n                self.progress.css({'display': 'none'});\n\n                self.status.text('Error uploading.');\n            }\n        });\n    };\n\n\n\n    uploader.uploadTarget.append(this.cell);\n    setTimeout(function(){\n        self.cell.css({'opacity': ''});\n    }, 1000/30);\n\n    this.cell.on('click',function(e){\n        if (self.state == 'ready') {\n            if (uploader.settings.insertMode) {\n                self.cell.addClass('ilab-upload-selected');\n                uploader.uploadSelected(self);\n            } else {\n                var win = window.open('post.php?post='+self.postId+'&action=edit', '_blank');\n                win.focus();\n            }\n        }\n\n        e.preventDefault();\n        return false;\n    });\n\n};\n\nvar ilabMediaUploader = function($, settings) {\n    var self = this;\n\n    console.log(settings);\n    this.insertButton = $('#ilab-insert-button');\n    this.settings = settings;\n    this.uploadTarget = $('#ilab-video-upload-target');\n    this.attachmentContainer = $('#ilab-attachment-info');\n    this.uploadDirections = this.uploadTarget.find('.ilab-upload-directions');\n    this.uploadItemTemplate = wp.template('ilab-upload-cell');\n    this.attachmentTemplate = wp.template('ilab-attachment-info');\n    this.hiddenFileInput = $('<input type=\"file\" style=\"visibility:hidden\" multiple=\"multiple\">');\n\n    this.waitingQueue = [];\n    this.uploadingQueue = [];\n\n    this.watchToken = null;\n\n    this.currentSelection = null;\n    this.attachmentInfo = null;\n\n    this.watchQueue = function() {\n        if ((self.uploadingQueue.length < 5) && (self.waitingQueue.length>0)) {\n            var currentQ = 5 - self.uploadingQueue.length;\n            for(var i=0; i<currentQ; i++) {\n                if (self.waitingQueue.length > 0) {\n                    var up = self.waitingQueue.shift();\n\n                    self.uploadingQueue.push(up);\n                    up.startUpload();\n                }\n            }\n        }\n\n        self.watchToken = setTimeout(self.watchQueue, 500);\n    };\n\n    this.uploadSelected = function(upload) {\n        if (self.currentSelection == upload) {\n            return;\n        }\n\n        self.insertButton.prop('disabled', true);\n        if (self.currentSelection) {\n            self.currentSelection.deselect();\n        }\n\n        self.currentSelection = upload;\n\n        var data = {\n            \"action\": \"ilab_upload_attachment_info\",\n            \"postId\": upload.postId\n        };\n\n        $.post(ajaxurl, data, function(response){\n            console.log(response);\n            $('body').addClass('ilab-item-selected');\n            self.attachmentInfo = new ilabAttachmentInfo($, self, response);\n            self.insertButton.prop('disabled', false);\n        });\n    };\n\n    this.uploadFinished = function(upload) {\n        var idx = self.uploadingQueue.indexOf(upload);\n        if (idx > -1) {\n            self.uploadingQueue.splice(idx, 1);\n        }\n\n        clearTimeout(self.watchToken);\n        self.watchQueue();\n    };\n\n    this.addFile = function(file) {\n        console.log(file);\n\n        if (file.type=='') {\n            console.log('Missing file type.');\n            return false;\n        }\n\n        var mimeType = file.type;\n\n\n        if (mimeType == 'application/x-photoshop') {\n            mimeType = 'image/psd';\n        }\n\n        if (settings.allowedMimes.indexOf(mimeType) == -1) {\n            console.log('Mime-type '+mimeType+' not allowed.');\n            return false;\n        }\n\n        var mimeTypeParts = mimeType.split('/');\n        var type = mimeTypeParts[0];\n        var subType = mimeTypeParts[1];\n\n        if (type == 'image') {\n            if (!settings.imgixEnabled) {\n                console.log('Image files not allowed.');\n                return false;\n            }\n\n            if (['jpeg','gif','png'].indexOf(subType) == -1) {\n                if (!settings.extrasEnabled) {\n                    console.log('Non-standard image files not allowed.');\n                    return false;\n                }\n\n                if (['psd','tiff','bmp'].indexOf(subType) == -1) {\n                    console.log('Invalid subtype.');\n                    return false;\n                }\n            }\n        } else if (type == 'video') {\n            if (!settings.videoEnabled) {\n                console.log('Video not allowed.');\n                return false;\n            }\n        } else {\n            if (!settings.docsEnabled) {\n                console.log('Docs not allowed.');\n                return false;\n            }\n        }\n\n        console.log([\n            'accepted',\n            file\n        ]);\n\n        self.waitingQueue.push(new ilabMediaUploadItem($, self, file));\n    };\n\n    this.uploadTarget.on('dragenter dragover', function(e){\n        self.uploadTarget.addClass('drag-inside');\n        e.stopPropagation();\n        e.preventDefault();\n    });\n\n    this.uploadTarget.on('dragleave drageexit', function(e){\n        self.uploadTarget.removeClass('drag-inside');\n        e.stopPropagation();\n        e.preventDefault();\n    });\n\n    this.uploadTarget.on('drop', function(e){\n        self.uploadTarget.removeClass('drag-inside');\n        self.uploadDirections.css({display: 'none'});\n        e.preventDefault();\n        var files = e.originalEvent.dataTransfer.files;\n        _.each(files, self.addFile);\n    });\n\n    this.uploadTarget.on('click', function(e){\n        self.hiddenFileInput.click();\n    });\n\n    this.hiddenFileInput.on('change', function(e){\n        self.uploadDirections.css({display: 'none'});\n        for(var i=0; i<this.files.length; i++) {\n            self.addFile(this.files[i]);\n        }\n    });\n\n    $('#ilab-open-editor').on('click',function(e){\n        wp.media({frame:'select'}).open();\n\n        e.preventDefault();\n        return false;\n    });\n\n    this.insertButton.on('click', function(e){\n        if (self.attachmentInfo) {\n            self.attachmentInfo.insert();\n        }\n\n        e.preventDefault();\n        return false;\n    });\n\n    //window.parent.send_to_editor('cool');\n\n    //console.log(window.parent.jQuery('.media-modal-close').trigger('click'));\n\n    if (settings.insertMode) {\n        $('body').addClass('ilab-upload-insert-mode');\n        // $('body').addClass('ilab-item-selected');\n    }\n\n    this.watchToken = setTimeout(this.watchQueue, 500);\n};"],"sourceRoot":"js/"}